// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Json = require("@glennsl/bs-json/lib/js/src/Json.bs.js");
var List = require("bs-platform/lib/js/list.js");
var Random = require("bs-platform/lib/js/random.js");
var $$String = require("bs-platform/lib/js/string.js");
var Dotenv = require("dotenv");
var Process = require("process");
var Json_decode = require("@glennsl/bs-json/lib/js/src/Json_decode.bs.js");
var Reddit$Record = require("./Reddit.bs.js");
var IsomorphicWs = require("isomorphic-ws");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

(( require('isomorphic-fetch') ));

var SocketClosed = Caml_exceptions.create("ComfyBot-Record.SocketClosed");

var SocketError = Caml_exceptions.create("ComfyBot-Record.SocketError");

Dotenv.config(undefined);

Random.self_init(/* () */0);

function getRandomRedditPost(param) {
  return Reddit$Record.fetchRedditPosts(/* () */0).then((function (posts) {
                return Promise.resolve(List.nth(posts, Random.$$int(List.length(posts))));
              }));
}

function onChatMessage(ws, message) {
  if (message.data.startsWith("!comfy")) {
    getRandomRedditPost(/* () */0).then((function (post) {
              ws.send(post.data.url);
              return Promise.resolve(/* () */0);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), /* () */0));
          }));
    return /* () */0;
  } else {
    return 0;
  }
}

function chatMessage(json) {
  return {
          data: Json_decode.field("data", Json_decode.string, json),
          features: Json_decode.field("features", (function (param) {
                  return Json_decode.list(Json_decode.string, param);
                }), json),
          nick: Json_decode.field("nick", Json_decode.string, json),
          timestamp: Json_decode.field("timestamp", Json_decode.$$int, json)
        };
}

var Decode = {
  chatMessage: chatMessage
};

function parseChatMessage(str) {
  return chatMessage(Json.parseOrRaise(str));
}

console.log(Process.env["STRIMS_CLIENT_TOKEN"]);

function bot(settings) {
  return new Promise((function (resolve, reject) {
                var dict = { };
                dict["Cookie"] = settings.token;
                var headers = JSON.stringify(dict);
                console.log("headers", headers);
                var ws = new IsomorphicWs("wss://chat.strims.gg/ws", /* array */[headers]);
                ws.on("open", (function (param) {
                              console.log("opened PepoComfy");
                              return resolve({
                                          settings: settings,
                                          ws: ws
                                        });
                            })).on("message", (function (data) {
                            if ($$String.sub(data, 0, 3) === "MSG") {
                              var str = $$String.sub(data, 4, data.length - 4 | 0);
                              return onChatMessage(ws, chatMessage(Json.parseOrRaise(str)));
                            } else {
                              return 0;
                            }
                          })).on("close", (function (code, reason) {
                          console.log("Closed: " + (String(code) + (" " + reason)));
                          return reject([
                                      SocketClosed,
                                      code,
                                      reason
                                    ]);
                        })).on("error", (function (error) {
                        console.log("error: " + error.message);
                        return /* () */0;
                      }));
                return /* () */0;
              }));
}

exports.SocketClosed = SocketClosed;
exports.SocketError = SocketError;
exports.getRandomRedditPost = getRandomRedditPost;
exports.onChatMessage = onChatMessage;
exports.Decode = Decode;
exports.parseChatMessage = parseChatMessage;
exports.bot = bot;
/*  Not a pure module */
