// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Json = require("@glennsl/bs-json/lib/js/src/Json.bs.js");
var Process = require("process");
var Data$Record = require("./Data.bs.js");
var IsomorphicWs = require("isomorphic-ws");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");

var SocketClosed = Caml_exceptions.create("RecordBot-Record.SocketClosed");

var SocketError = Caml_exceptions.create("RecordBot-Record.SocketError");

function bot(settings) {
  return new Promise((function (resolve, reject) {
                var ws = new IsomorphicWs("wss://gateway.discord.gg/?v=6&encoding=json");
                ws.on("open", (function (param) {
                              console.log("Opened");
                              return resolve({
                                          settings: settings,
                                          ws: ws
                                        });
                            })).on("close", (function (code, reason) {
                            console.log("Closed: " + (String(code) + (" " + reason)));
                            return reject([
                                        SocketClosed,
                                        code,
                                        reason
                                      ]);
                          })).on("error", (function (error) {
                          console.log("Error: " + error.message);
                          return reject([
                                      SocketError,
                                      error
                                    ]);
                        })).on("message", (function (message) {
                        var x = Data$Record.Decode.data(Json.parseOrRaise(message)).d;
                        if (typeof x === "number") {
                          if (x === /* Ack */1) {
                            return /* () */0;
                          } else {
                            console.log(message);
                            console.log(x);
                            return /* () */0;
                          }
                        } else if (x.tag === /* Hello */9) {
                          setInterval((function (param) {
                                  ws.send(Json.stringify(Data$Record.Encode.dataFromPayload(/* Heartbeat */Caml_chrome_debugger.variant("Heartbeat", 1, [undefined]))));
                                  return /* () */0;
                                }), x[0].heartbeatInterval);
                          ws.send(Json.stringify(Data$Record.Encode.dataFromPayload(/* Identify */Caml_chrome_debugger.variant("Identify", 2, [{
                                            token: settings.token,
                                            properties: {
                                              os: Process.platform,
                                              browser: "record",
                                              device: "record"
                                            },
                                            compress: /* Missing */0,
                                            largeThreshold: /* Missing */0,
                                            shard: /* Missing */0,
                                            presence: /* Missing */0
                                          }]))));
                          return /* () */0;
                        } else {
                          console.log(message);
                          console.log(x);
                          return /* () */0;
                        }
                      }));
                return /* () */0;
              }));
}

exports.SocketClosed = SocketClosed;
exports.SocketError = SocketError;
exports.bot = bot;
/* process Not a pure module */
